[tool:pytest]
# Pytest configuration for Cookie Licking Detector

# Minimum version of pytest
minversion = 7.0

# Test discovery patterns
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Add current directory to Python path
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=app
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml
    --cov-fail-under=85
    --asyncio-mode=auto

# Markers for organizing tests
markers =
    unit: Unit tests
    integration: Integration tests  
    api: API endpoint tests
    load: Load tests (excluded by default)
    slow: Slow running tests
    auth: Authentication related tests
    database: Tests requiring database
    redis: Tests requiring Redis
    external: Tests requiring external services
    github: Tests requiring GitHub API
    email: Tests requiring email services

# Test timeout (seconds)
timeout = 300

# Ignore warnings from external libraries
filterwarnings =
    ignore::DeprecationWarning:pkg_resources.*
    ignore::DeprecationWarning:sqlalchemy.*
    ignore::PendingDeprecationWarning
    ignore:.*unclosed.*:ResourceWarning
    ignore::pytest.PytestUnraisableExceptionWarning

# Environment variables for testing
env =
    ENVIRONMENT = testing
    DEBUG = true
    DATABASE_URL = sqlite+aiosqlite:///:memory:
    REDIS_URL = redis://localhost:6379/15
    ENABLE_METRICS = false
    LOG_LEVEL = ERROR

# Parallel test execution
# Uncomment to run tests in parallel: pytest -n auto
# addopts = -n auto

# Coverage configuration
[coverage:run]
source = app
omit = 
    app/tests/*
    app/**/test_*.py
    app/**/*_test.py
    app/alembic/*
    app/scripts/*
    */venv/*
    */virtualenv/*
    */.venv/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

[coverage:html]
directory = htmlcov