version: '3.8'

services:
  app:
    build: 
      context: .
      dockerfile: Dockerfile.dev
    volumes:
      - .:/app
      - /app/__pycache__
      - /app/.pytest_cache
    environment:
      - ENVIRONMENT=development
      - DEBUG=true
      - RELOAD=true
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
    ports:
      - "8000:8000"

  celery-worker:
    build: 
      context: .
      dockerfile: Dockerfile.dev
    volumes:
      - .:/app
    environment:
      - ENVIRONMENT=development
      - DEBUG=true
    command: ["celery", "-A", "app.core.celery_app", "worker", "--loglevel=debug", "--concurrency=2"]

  celery-beat:
    build: 
      context: .
      dockerfile: Dockerfile.dev
    volumes:
      - .:/app
    environment:
      - ENVIRONMENT=development
      - DEBUG=true
    command: ["celery", "-A", "app.core.celery_app", "beat", "--loglevel=debug"]

  # Remove nginx for development
  nginx:
    profiles: ["production"]

  # Database with exposed port for development
  db:
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=cookie_detector_dev
      - POSTGRES_USER=cookie_user
      - POSTGRES_PASSWORD=cookie_password

  # Add pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@example.com
      - PGADMIN_DEFAULT_PASSWORD=admin
      - PGADMIN_LISTEN_PORT=80
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - db

  # Add Redis Commander for Redis management
  redis-commander:
    image: rediscommander/redis-commander:latest
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis

volumes:
  pgadmin_data: